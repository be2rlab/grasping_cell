<launch>

  <!-- Get arguments -->
  <arg name="ckpt_dir" default="$(find contact_graspnet_planner)checkpoints/scene_test_2048_bs3_hor_sigma_001" doc="Log dir [default: checkpoints/scene_test_2048_bs3_hor_sigma_001]" />
  <arg name="z_min" default="0.2" doc="Z min value threshold to crop the input point cloud" />
  <arg name="z_max" default="1.0" doc="Z max value threshold to crop the input point cloud" />
  <arg name="local_regions" default="False" doc="Crop 3D local regions around given segments." />
  <arg name="filter_grasps" default="False" doc="Filter grasp contacts according to segmap." />
  <arg name="skip_border_objects" default="False" doc="When extracting local_regions, ignore segments at depth map boundary." />
  <arg name="forward_passes" default="1" doc="Run multiple parallel forward passes to mesh_utils more potential contact points." />
  <arg name="segmap_id" default="0" doc="Only return grasps of the given object id" />

  <!-- Run Contact-GraspNet -->
  <node name="contact_graspnet_planner" pkg="contact_graspnet_planner" type="ros_node.py" output="screen" >
      <param name="ckpt_dir" type="str" value="$(arg ckpt_dir)" />
      <param name="z_min" type="double" value="$(arg z_min)" />
      <param name="z_max" type="double" value="$(arg z_max)" />
      <param name="local_regions" type="bool" value="$(arg local_regions)" />
      <param name="filter_grasps" type="bool" value="$(arg filter_grasps)" />
      <param name="skip_border_objects" type="bool" value="$(arg skip_border_objects)" />
      <param name="forward_passes" type="int" value="$(arg forward_passes)" />
      <param name="segmap_id" type="int" value="$(arg segmap_id)" />



  </node>
</launch>